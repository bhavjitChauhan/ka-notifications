(()=>{"use strict";const n=JSON.parse('{"AddFeedbackToDiscussion":"mutation AddFeedbackToDiscussion($focusKind: String, $focusId: String, $parentKey: String, $textContent: String!, $feedbackType: FeedbackType!, $fromVideoAuthor: Boolean, $shownLowQualityNotice: Boolean) {\\n  addFeedbackToDiscussion(focusKind: $focusKind, focusId: $focusId, parentKey: $parentKey, textContent: $textContent, feedbackType: $feedbackType, fromVideoAuthor: $fromVideoAuthor, shownLowQualityNotice: $shownLowQualityNotice) {\\n    feedback {\\n      appearsAsDeleted\\n      author {\\n        id\\n        kaid\\n        nickname\\n        avatar {\\n          name\\n          imageSrc\\n          __typename\\n        }\\n        __typename\\n      }\\n      content\\n      date\\n      definitelyNotSpam\\n      deleted\\n      downVoted\\n      expandKey\\n      feedbackType\\n      flaggedBy\\n      flags\\n      focusUrl\\n      focus {\\n        kind\\n        id\\n        translatedTitle\\n        relativeUrl\\n        __typename\\n      }\\n      fromVideoAuthor\\n      key\\n      notifyOnAnswer\\n      permalink\\n      qualityKind\\n      replyCount\\n      replyExpandKeys\\n      sumVotesIncremented\\n      upVoted\\n      __typename\\n    }\\n    lowQualityResponse {\\n      feedbackCode\\n      feedbackChar\\n      feedbackType\\n      showLowQualityNotice\\n      __typename\\n    }\\n    error {\\n      code\\n      __typename\\n    }\\n    __typename\\n  }\\n}\\n","clearBrandNewNotifications":"mutation clearBrandNewNotifications {\\n  clearBrandNewNotifications {\\n    error {\\n      code\\n      __typename\\n    }\\n    __typename\\n  }\\n}\\n","feedbackQuery":"query feedbackQuery($topicId: String!, $focusKind: String!, $cursor: String, $limit: Int, $feedbackType: FeedbackType!, $currentSort: Int, $qaExpandKey: String) {\\n  feedback(focusId: $topicId, cursor: $cursor, limit: $limit, feedbackType: $feedbackType, focusKind: $focusKind, sort: $currentSort, qaExpandKey: $qaExpandKey, answersLimit: 1) {\\n    feedback {\\n      isLocked\\n      isPinned\\n      replyCount\\n      appearsAsDeleted\\n      author {\\n        id\\n        kaid\\n        nickname\\n        avatar {\\n          name\\n          imageSrc\\n          __typename\\n        }\\n        __typename\\n      }\\n      badges {\\n        name\\n        icons {\\n          smallUrl\\n          __typename\\n        }\\n        description\\n        __typename\\n      }\\n      content\\n      date\\n      definitelyNotSpam\\n      deleted\\n      downVoted\\n      expandKey\\n      feedbackType\\n      flaggedBy\\n      flaggedByUser\\n      flags\\n      focusUrl\\n      focus {\\n        kind\\n        id\\n        translatedTitle\\n        relativeUrl\\n        __typename\\n      }\\n      fromVideoAuthor\\n      key\\n      lowQualityScore\\n      notifyOnAnswer\\n      permalink\\n      qualityKind\\n      replyCount\\n      replyExpandKeys\\n      showLowQualityNotice\\n      sumVotesIncremented\\n      upVoted\\n      ... on QuestionFeedback {\\n        hasAnswered\\n        answers {\\n          isLocked\\n          isPinned\\n          replyCount\\n          appearsAsDeleted\\n          author {\\n            id\\n            kaid\\n            nickname\\n            avatar {\\n              name\\n              imageSrc\\n              __typename\\n            }\\n            __typename\\n          }\\n          badges {\\n            name\\n            icons {\\n              smallUrl\\n              __typename\\n            }\\n            description\\n            __typename\\n          }\\n          content\\n          date\\n          definitelyNotSpam\\n          deleted\\n          downVoted\\n          expandKey\\n          feedbackType\\n          flaggedBy\\n          flaggedByUser\\n          flags\\n          focusUrl\\n          focus {\\n            kind\\n            id\\n            translatedTitle\\n            relativeUrl\\n            __typename\\n          }\\n          fromVideoAuthor\\n          key\\n          lowQualityScore\\n          notifyOnAnswer\\n          permalink\\n          qualityKind\\n          replyCount\\n          replyExpandKeys\\n          showLowQualityNotice\\n          sumVotesIncremented\\n          upVoted\\n          __typename\\n        }\\n        isOld\\n        answerCount\\n        __typename\\n      }\\n      ... on AnswerFeedback {\\n        question {\\n          isLocked\\n          isPinned\\n          replyCount\\n          appearsAsDeleted\\n          author {\\n            id\\n            kaid\\n            nickname\\n            avatar {\\n              name\\n              imageSrc\\n              __typename\\n            }\\n            __typename\\n          }\\n          badges {\\n            name\\n            icons {\\n              smallUrl\\n              __typename\\n            }\\n            description\\n            __typename\\n          }\\n          content\\n          date\\n          definitelyNotSpam\\n          deleted\\n          downVoted\\n          expandKey\\n          feedbackType\\n          flaggedBy\\n          flaggedByUser\\n          flags\\n          focusUrl\\n          focus {\\n            kind\\n            id\\n            translatedTitle\\n            relativeUrl\\n            __typename\\n          }\\n          fromVideoAuthor\\n          key\\n          lowQualityScore\\n          notifyOnAnswer\\n          permalink\\n          qualityKind\\n          replyCount\\n          replyExpandKeys\\n          showLowQualityNotice\\n          sumVotesIncremented\\n          upVoted\\n          __typename\\n        }\\n        __typename\\n      }\\n      __typename\\n    }\\n    cursor\\n    isComplete\\n    sortedByDate\\n    __typename\\n  }\\n}\\n","getFeedbackRepliesPage":"query getFeedbackRepliesPage($postKey: String!, $cursor: String, $limit: Int!) {\\n  feedbackRepliesPaginated(feedbackKey: $postKey, cursor: $cursor, limit: $limit) {\\n    cursor\\n    isComplete\\n    feedback {\\n      isLocked\\n      expandKey\\n      appearsAsDeleted\\n      author {\\n        id\\n        kaid\\n        nickname\\n        avatar {\\n          name\\n          imageSrc\\n          __typename\\n        }\\n        __typename\\n      }\\n      content\\n      date\\n      definitelyNotSpam\\n      deleted\\n      downVoted\\n      expandKey\\n      feedbackType\\n      flaggedBy\\n      flaggedByUser\\n      flags\\n      focusUrl\\n      fromVideoAuthor\\n      key\\n      lowQualityScore\\n      notifyOnAnswer\\n      permalink\\n      qualityKind\\n      replyCount\\n      replyExpandKeys\\n      showLowQualityNotice\\n      sumVotesIncremented\\n      upVoted\\n      __typename\\n    }\\n    __typename\\n  }\\n}\\n","getFullUserProfile":"query getFullUserProfile($kaid: String, $username: String) {\\n  user(kaid: $kaid, username: $username) {\\n    id\\n    kaid\\n    key\\n    userId\\n    email\\n    username\\n    profileRoot\\n    gaUserId\\n    isPhantom\\n    isDeveloper: hasPermission(name: \\"can_do_what_only_admins_can_do\\")\\n    isCurator: hasPermission(name: \\"can_curate_tags\\", scope: ANY_ON_CURRENT_LOCALE)\\n    isCreator: hasPermission(name: \\"has_creator_role\\", scope: ANY_ON_CURRENT_LOCALE)\\n    isPublisher: hasPermission(name: \\"can_publish\\", scope: ANY_ON_CURRENT_LOCALE)\\n    isModerator: hasPermission(name: \\"can_moderate_users\\", scope: GLOBAL)\\n    isParent\\n    isTeacher\\n    isDataCollectible\\n    isChild\\n    isOrphan\\n    isCoachingLoggedInUser\\n    canModifyCoaches\\n    nickname\\n    hideVisual\\n    joined\\n    points\\n    countVideosCompleted\\n    bio\\n    profile {\\n      accessLevel\\n      __typename\\n    }\\n    soundOn\\n    muteVideos\\n    showCaptions\\n    prefersReducedMotion\\n    noColorInVideos\\n    newNotificationCount\\n    canHellban: hasPermission(name: \\"can_ban_users\\", scope: GLOBAL)\\n    canMessageUsers: hasPermission(name: \\"can_send_moderator_messages\\", scope: GLOBAL)\\n    isSelf: isActor\\n    hasStudents: hasCoachees\\n    hasClasses\\n    hasChildren\\n    hasCoach\\n    badgeCounts\\n    homepageUrl\\n    isMidsignupPhantom\\n    includesDistrictOwnedData\\n    canAccessDistrictsHomepage\\n    preferredKaLocale {\\n      id\\n      kaLocale\\n      status\\n      __typename\\n    }\\n    underAgeGate {\\n      parentEmail\\n      daysUntilCutoff\\n      approvalGivenAt\\n      __typename\\n    }\\n    authEmails\\n    signupDataIfUnverified {\\n      email\\n      emailBounced\\n      __typename\\n    }\\n    pendingEmailVerifications {\\n      email\\n      __typename\\n    }\\n    hasAccessToAIGuideTeacher\\n    tosAccepted\\n    shouldShowAgeCheck\\n    birthMonthYear\\n    lastLoginCountry\\n    __typename\\n  }\\n  actorIsImpersonatingUser\\n  isAIGuideEnabled\\n  hasAccessToAIGuideDev\\n}\\n","getNotificationsForUser":"query getNotificationsForUser($after: ID) {\\n  user {\\n    id\\n    notifications(after: $after) {\\n      notifications {\\n        __typename\\n        brandNew\\n        class_\\n        date\\n        kaid\\n        read\\n        url\\n        urlsafeKey\\n        ...ThreadCreatedNotificationType\\n        ...AssignmentDueDateNotificationType\\n        ...AssignmentCreatedNotificationType\\n        ...CoachRequestNotificationType\\n        ...BadgeNotificationType\\n        ...CourseMasteryGoalCreatedNotificationType\\n        ...ModeratorNotificationType\\n        ...ProgramFeedbackNotificationType\\n        ...CoachRequestAcceptedNotificationType\\n        ...AvatarNotificationType\\n        ...InfoNotificationType\\n        ...ResponseFeedbackNotificationType\\n        ...GroupedBadgeNotificationType\\n        ...UnitMasteryGoalCreatedNotificationType\\n        ...UnitMasteryDueDateCreatedNotificationType\\n        ...CourseMasteryDueDateCreatedNotificationType\\n        ...MasteryGoalDueDateApproachingCreatedNotificationType\\n      }\\n      pageInfo {\\n        nextCursor\\n        __typename\\n      }\\n      __typename\\n    }\\n    __typename\\n  }\\n}\\n\\nfragment AssignmentCreatedNotificationType on AssignmentCreatedNotification {\\n  numAssignments\\n  contentTitle\\n  curationNodeIconURL\\n  className\\n  __typename\\n}\\n\\nfragment AssignmentDueDateNotificationType on AssignmentDueDateNotification {\\n  numAssignments\\n  dueDate\\n  contentTitle\\n  curationNodeIconURL\\n  __typename\\n}\\n\\nfragment AvatarNotificationType on AvatarNotification {\\n  name\\n  thumbnailSrc\\n  __typename\\n}\\n\\nfragment BadgeNotificationType on BadgeNotification {\\n  badgeName\\n  badge {\\n    description\\n    fullDescription\\n    name\\n    relativeUrl\\n    icons {\\n      compactUrl\\n      __typename\\n    }\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment CoachRequestAcceptedNotificationType on CoachRequestAcceptedNotification {\\n  isMultipleClassrooms\\n  student {\\n    id\\n    email\\n    nickname\\n    __typename\\n  }\\n  classroom {\\n    cacheId\\n    id\\n    name\\n    topics {\\n      id\\n      slug\\n      iconUrl\\n      key\\n      translatedStandaloneTitle\\n      __typename\\n    }\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment CoachRequestNotificationType on CoachRequestNotification {\\n  coachIsParent\\n  coach {\\n    id\\n    kaid\\n    nickname\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment CourseMasteryDueDateCreatedNotificationType on CourseMasteryDueDateCreatedNotification {\\n  dueDate\\n  course {\\n    id\\n    iconUrl\\n    translatedStandaloneTitle\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment CourseMasteryGoalCreatedNotificationType on CourseMasteryGoalCreatedNotification {\\n  curationNodeIconURL\\n  curationNodeTranslatedTitle\\n  masteryPercentage\\n  __typename\\n}\\n\\nfragment GroupedBadgeNotificationType on GroupedBadgeNotification {\\n  badgeNotifications {\\n    badge {\\n      badgeCategory\\n      description\\n      fullDescription\\n      name\\n      icons {\\n        compactUrl\\n        __typename\\n      }\\n      __typename\\n    }\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment InfoNotificationType on InfoNotification {\\n  notificationType\\n  __typename\\n}\\n\\nfragment MasteryGoalDueDateApproachingCreatedNotificationType on MasteryGoalDueDateApproachingCreatedNotification {\\n  classroomInfo: classroom {\\n    id\\n    cacheId\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ModeratorNotificationType on ModeratorNotification {\\n  text\\n  __typename\\n}\\n\\nfragment ProgramFeedbackNotificationType on ProgramFeedbackNotification {\\n  authorAvatarSrc\\n  authorNickname\\n  feedbackType\\n  translatedScratchpadTitle\\n  content\\n  __typename\\n}\\n\\nfragment ResponseFeedbackNotificationType on ResponseFeedbackNotification {\\n  authorAvatarUrl\\n  authorNickname\\n  feedbackType\\n  focusTranslatedTitle\\n  content\\n  sumVotesIncremented\\n  __typename\\n}\\n\\nfragment ThreadCreatedNotificationType on ThreadCreatedNotification {\\n  coachee {\\n    id\\n    kaid\\n    nickname\\n    __typename\\n  }\\n  threadId\\n  flagged\\n  __typename\\n}\\n\\nfragment UnitMasteryDueDateCreatedNotificationType on UnitMasteryDueDateCreatedNotification {\\n  dueDate\\n  unit {\\n    id\\n    iconUrl\\n    translatedStandaloneTitle\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment UnitMasteryGoalCreatedNotificationType on UnitMasteryGoalCreatedNotification {\\n  numAssignmentsCount: numAssignments\\n  classroomInfo: classroom {\\n    cacheId\\n    id\\n    coach {\\n      id\\n      nickname\\n      __typename\\n    }\\n    __typename\\n  }\\n  unit {\\n    id\\n    iconUrl\\n    parent {\\n      id\\n      iconUrl\\n      __typename\\n    }\\n    __typename\\n  }\\n  __typename\\n}\\n"}');function e(e,t,a={}){return new Promise(((i,o)=>{fetch("https://www.khanacademy.org/api/internal/graphql/"+e+"?/fastly/",{method:"POST",headers:{"X-KA-fkey":t,"Content-Type":"application/json"},body:JSON.stringify({operationName:e,query:n[e],variables:a}),credentials:"same-origin"}).then((async n=>{if(200===n.status)return i(n);o(`Error in GraphQL "${e}" call: Server responded  with status ${n.status}.`)})).catch(o)}))}function t(){return new Promise(((n,e)=>{chrome.cookies.get({url:"https://www.khanacademy.org",name:"fkey"},(t=>{if(null===t)return e("No fkey cookie found.");n(t.value)}))}))}function a(n){n=i(n);const e=[],t=[];let a=n=(n=n.replace(/```([\s\S]*?)```/gm,((n,t)=>(e.push(t),`<codeblock-placeholder-${e.length-1}>`)))).replace(/`([^\n]+?)`/g,((n,e)=>(t.push(e),`<codeinline-placeholder-${t.length-1}>`)));for(let e=0;e<100&&(n=(n=(n=n.replace(/\*([^\n]+?)\*/g,"<b>$1</b>")).replace(/_([^\n]+?)_/g,"<i>$1</i>")).replace(/~([^\n]+?)~/g,"<s>$1</s>"))!==a;e++)a=n;return(n=(n=(n=n.replace(/<codeblock-placeholder-(\d+)>/g,((n,t)=>`<pre><code>${e[parseInt(t)]}</code></pre>`))).replace(/<codeinline-placeholder-(\d+)>/g,((n,e)=>`<code>${t[parseInt(e)]}</code>`))).replace(/((?:http|https)(?:.*?))(?:\s|$)/g,'<a class="hyperlink" href="$1" target="_blank">$1</a>')).replace(/@([a-zA-Z][a-zA-Z\d]{0,39})/g,'<a class="hyperlink" href="https://www.khanacademy.org/profile/$1" target="_blank">@$1</a>')}function i(n){return n.replace(/&/g,"&amp;").replace(/>/g,"&gt;").replace(/</g,"&lt;")}function o(n){const{brandNew:e,date:t,url:o}=n;switch(n.__typename){case"ResponseFeedbackNotification":return`<li class="notification ${!0===e?"new":""}"><div class="notification-header"><img class="notification-author-avatar" src="${n.authorAvatarUrl}"><h3 class="notification-author-nickname">${i(n.authorNickname)}</h3><a class="hyperlink" href="https://www.khanacademy.org${o}" target="_blank">${"REPLY"===n.feedbackType?"added a comment":"answered your question"} on ${n.focusTranslatedTitle}</a><span class="notification-date">${s(new Date(t))} ago</span></div><div class="notification-content">${a(n.content)}</div><div class="notification-feedback-container"><button class="notification-feedback-button add-listeners" data-url="${o}" data-typename="ResponseFeedbackNotification" data-feedbacktype="${n.feedbackType}">Reply</button></div></li>`;case"ProgramFeedbackNotification":return`<li class="notification ${e?"new":""}"><div class="notification-header"><img class="notification-author-avatar" src="${n.authorAvatarSrc}"><h3 class="notification-author-nickname">${i(n.authorNickname)}</h3><a class="hyperlink" href="https://www.khanacademy.org${o}" target="_blank">${"COMMENT"===n.feedbackType?"commented":"asked a question"} on ${i(n.translatedScratchpadTitle)}</a><span class="notification-date">${s(new Date(t))} ago</span></div><div class="notification-content">${a(n.content)}</div><div class="notification-feedback-container"><button class="notification-feedback-button add-listeners" data-url="${o}" data-typename="ProgramFeedbackNotification" data-feedbacktype="${n.feedbackType}">Reply</button></div></li>`;default:return console.log(`Notification type ${n.__typename} is currently unsupported.`),`<li class="notification ${e?"new":""}"><div class="notification-header"><img class="notification-author-avatar" src="48.png"><h3 class="notification-author-nickname">Unsupported Notification Type</h3><span class="notification-date">${s(new Date(t))}</span></div><div class="notification-content">${JSON.stringify(n)}</div></li>`}}function r(){let n=document.getElementsByClassName("add-listeners");for(let e=n.length;e--;)n[e].addEventListener("click",c),n[e].className="notification-feedback-button"}function s(n){const e=((new Date).getTime()-n.getTime())/1e3|0;if(e<60)return`${e} second${1===e?"":"s"}`;if(e<3600){const n=e/60|0;return`${n} minute${1===n?"":"s"}`}if(e<86400){const n=e/3600|0;return`${n} hour${1===n?"":"s"}`}if(e<2592e3){const n=e/86400|0;return`${n} day${1===n?"":"s"}`}if(e<31536e3){const n=e/2592e3|0;return`${n} month${1===n?"":"s"}`}const t=e/31536e3|0;return`${t} year${1===t?"":"s"}`}function c(n){const e=document.getElementById("active-textarea");if(e){let n=e.parentElement.getElementsByClassName("notification-feedback-button")[0];n.removeEventListener("click",d),n.addEventListener("click",c),n.textContent="Reply",e.remove()}const t=n.target;t.removeEventListener("click",c),t.addEventListener("click",d),t.textContent="Cancel";const a=document.createElement("textarea");a.id="active-textarea",a.oninput=()=>{0===a.value.length?t.textContent="Cancel":t.textContent="Send",a.style.height="0",a.style.height=`${a.scrollHeight+2}px`},t.insertAdjacentElement("beforebegin",a),a.focus()}async function d(n){const a=n.target,i=document.getElementById("active-textarea");if(0===i.value.length)return a.textContent="Reply",a.removeEventListener("click",d),a.addEventListener("click",c),void i.remove();const{value:o}=i,{url:r,typename:s,feedbacktype:l}=a.dataset;a.textContent="Sending...",i.disabled=!0;try{const n=await t(),c=await async function(n,t,a,i,o){let r,s,c="scratchpad";const d=new URL("https://www.khanacademy.org/"+t).searchParams;if("ResponseFeedbackNotification"===a)s="ANSWER"===i?"QUESTION":"COMMENT",r="REPLY",c=d.get("qa_expand_type");else{if("ProgramFeedbackNotification"!==a)return!1;s=i,r="QUESTION"===i?"ANSWER":"REPLY"}const l=t.split("?")[0].split("/").pop();return e("feedbackQuery",n,{topicId:l,feedbackType:s,currentSort:5,qaExpandKey:d.get("qa_expand_key"),focusKind:c}).then((n=>n.json())).then((async t=>{const a=t.data.feedback.feedback[0],s="QUESTION"===i&&"answer"===d.get("qa_expand_type")?a.answers[0].key:a.key;return e("AddFeedbackToDiscussion",n,{parentKey:s,textContent:o,feedbackType:r,fromVideoAuthor:!1,shownLowQualityNotice:!1})})).then((n=>n.ok)).catch((n=>(console.error("Error in sending feedback: ",n),!1)))}(n,r,s,l,o);!0===c?(a.textContent="Success!",window.setTimeout((()=>{a.textContent="Reply",i.remove()}),5e3)):(i.value="Error in sending request.",a.textContent="Failure!")}catch(n){console.error("Error in sending message: "+o+"; "+n),i.value="Error in sending request: "+n}}const l=document.getElementById("notifications-container");let p,y=!1;function m(){!1===y&&Math.abs(document.body.scrollHeight-document.body.scrollTop-document.body.clientHeight)<=76&&(y=!0,f())}chrome.storage.local.get(["prefetch_data","prefetch_cursor","theme"]).then((async({prefetch_data:n,prefetch_cursor:e,theme:t})=>{if(function(n){const e=document.getElementById("theme-button");"dark"===n&&(document.body.className=n,e.innerHTML='<svg stroke="#6b27d9" stroke-width="2" viewBox="0 0 24 24" stroke-linecap="round" stroke-linejoin="round" height="18px" width="18px" xmlns="http://www.w3.org/2000/svg"><circle cx="12" cy="12" r="5"></circle><line x1="12" y1="1" x2="12" y2="3"></line><line x1="12" y1="21" x2="12" y2="23"></line><line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line><line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line><line x1="1" y1="12" x2="3" y2="12"></line><line x1="21" y1="12" x2="23" y2="12"></line><line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line><line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line></svg>'),e.onclick=()=>{1==("dark"===document.body.className)?(chrome.storage.local.remove("theme"),e.innerHTML='<svg stroke-width="2" viewBox="0 0 24 24" stroke-linecap="round" stroke-linejoin="round" height="18px" width="18px" xmlns="http://www.w3.org/2000/svg"><path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path></svg>',document.body.className=""):(chrome.storage.local.set({theme:"dark"}),e.innerHTML='<svg stroke="#6b27d9" stroke-width="2" viewBox="0 0 24 24" stroke-linecap="round" stroke-linejoin="round" height="18px" width="18px" xmlns="http://www.w3.org/2000/svg"><circle cx="12" cy="12" r="5"></circle><line x1="12" y1="1" x2="12" y2="3"></line><line x1="12" y1="21" x2="12" y2="23"></line><line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line><line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line><line x1="1" y1="12" x2="3" y2="12"></line><line x1="21" y1="12" x2="23" y2="12"></line><line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line><line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line></svg>',document.body.className="dark")}}(t),n)switch(n){case"info:cookie":l.innerHTML='<li class="notification new"><div class="notification-header"><img class="notification-author-avatar" src="32.png"><h3 class="notification-author-nickname">KA Notifications</h3></div><div class="notification-content">Your authentication cookie has expired. Please <a class="hyperlink" href="https://khanacademy.org/" target="_blank">navigate to Khan Academy</a> to refresh it.</div></li>',document.getElementById("loading-spinner-container")?.remove();break;case"info:logout":l.innerHTML='<li class="notification new"><div class="notification-header"><img class="notification-author-avatar" src="32.png"><h3 class="notification-author-nickname">KA Notifications</h3></div><div class="notification-content">You are logged out. Please <a class="hyperlink" href="https://khanacademy.org/login" target="_blank">log in to Khan Academy</a> to use this extension.</div></li>',document.getElementById("loading-spinner-container")?.remove();break;case"info:nonotifications":l.innerHTML='<li class="notification new"><div class="notification-header"><img class="notification-author-avatar" src="32.png"><h3 class="notification-author-nickname">KA Notifications</h3></div><div class="notification-content">You have no notifications.</div></li>',document.getElementById("loading-spinner-container")?.remove();break;default:let t=n;if(void 0===t)return;if(l.innerHTML=t.map(o).join(""),r(),void 0===e)return;p=e,document.body.addEventListener("scroll",m,{passive:!0})}else await f(),document.body.addEventListener("scroll",m,{passive:!0})})).catch((n=>{console.log(n)}));let u=!0;async function f(){const n=await async function(n,a){const i=await async function(n,a,i={}){let o,r;if(void 0!==a)o=a;else try{o=await t()}catch(n){return{cookieError:!0}}try{r=await e(n,o,i)}catch(n){return"Failed to fetch"===n.message?void console.log("Possible network disconnect detected, please check your internet connection."):void console.error("Error in response: ",n.message)}return{value:await r.json()}}("getNotificationsForUser",n,void 0===a?void 0:{after:a});if(!0===i?.cookieError)return{error:"cookie"};if(!i?.value)return;let o=i.value?.data?.user?.notifications;return o?{value:{notifications:o.notifications,cursor:o.pageInfo.nextCursor}}:{error:"nonotifications"}}(void 0,p);if(void 0!==n.value){const{notifications:e,cursor:t}=n.value;l.insertAdjacentHTML("beforeend",e.map(o).join("")),r(),null===t&&(document.getElementById("loading-spinner-container")?.remove(),document.body.removeEventListener("scroll",m)),p=t,y=!1}else{if(document.getElementById("loading-spinner-container")?.remove(),!0===u&&"cookie"===n.error)return l.innerHTML='<li class="notification new"><div class="notification-header"><img class="notification-author-avatar" src="32.png"><h3 class="notification-author-nickname">KA Notifications</h3></div><div class="notification-content">You are logged out. Please <a class="hyperlink" href="https://khanacademy.org/login" target="_blank">log in to Khan Academy</a> to use this extension.</div></li>',void(u=!1);switch(n.error){case"cookie":l.innerHTML='<li class="notification new"><div class="notification-header"><img class="notification-author-avatar" src="32.png"><h3 class="notification-author-nickname">KA Notifications</h3></div><div class="notification-content">Your authentication cookie has expired. Please <a class="hyperlink" href="https://khanacademy.org/" target="_blank">navigate to Khan Academy</a> to refresh it.</div></li>';break;case"nonotifications":document.body.removeEventListener("scroll",m)}}u=!1}})();